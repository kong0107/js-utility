var kongUtilDom;(()=>{"use strict";var e={571:(e,r,t)=>{t.d(r,{D:()=>o,Z:()=>i});const n={},o=function(...e){e[0]instanceof Array&&(e=e[0]);for(let r in this)"use"!==r&&(e.length&&!e.includes(r)||(globalThis[r]=this[r]))}.bind(n);Object.assign(n,{use:o});const i=n}},r={};function t(n){var o=r[n];if(void 0!==o)return o.exports;var i=r[n]={exports:{}};return e[n](i,i.exports,t),i.exports}t.d=(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};(()=>{t.r(n),t.d(n,{$:()=>r,$$:()=>o,default:()=>f,getNodes:()=>s,parseHTML:()=>i,use:()=>e.D});var e=t(571);const r=(e,t=document)=>{if("string"==typeof e)return t.querySelector(e);if(e instanceof Array)return e.map((e=>r(e,t)));for(let n in e)result[n]=r(e[n],t);return{}},o=(e,r=document)=>{if("string"==typeof e)return[...r.querySelectorAll(e)];if(e instanceof Array)return e.map((e=>o(e,r)));for(let t in e)result[t]=o(e[t],r);return{}},i=(()=>{let e;return(t,n="body > *")=>{if("undefined"==typeof DOMParser)throw ReferenceError("DOMParser is not defined");e||(e=new DOMParser);const o=e.parseFromString(t,"text/html");return"string"==typeof n||n instanceof Array?r(n,o):o}})();function s(e=(()=>!0),r=(()=>!1),t=document){if("function"!=typeof e&&"function"!=typeof r)return e instanceof Array&&(e=e.join(",")),r instanceof Array&&(r=r.join(",")),o(e,t).filter((e=>!o(r,t).includes(e)));e=a(e,t),r=a(r,t);const n={acceptNode:t=>r(t)?NodeFilter.FILTER_REJECT:e(t)?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP},i=document.createTreeWalker(t,NodeFilter.SHOW_ALL,n);let s,f=[];for(;s=i.nextNode();)f.push(s);return f}function a(e,r){if("function"==typeof e)return e;if("string"==typeof e){const t=o(e,r);return e=>t.includes(e)}if(e instanceof Array)return e=e.map((e=>e.toUpperCase())),r=>e.includes(r.tagName);throw new TypeError("selector shall be a function, a CSS selector string, or an array of strings representing HTML tags.")}Object.assign(e.Z,{$:r,$$:o,parseHTML:i,getNodes:s});const f=e.Z})(),kongUtilDom=n})();