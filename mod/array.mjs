var n={735:(n,t,e)=>{e.d(t,{A:()=>a,Y:()=>s});const r={version:"0.7.11"},s=function(...n){n[0]instanceof Array&&(n=n[0]);for(let t in this)"use"!==t&&(n.length&&!n.includes(t)||(globalThis[t]=this[t]))}.bind(r);Object.assign(r,{use:s});const a=r}},t={};function e(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={exports:{}};return n[r](a,a.exports,e),a.exports}e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t);var r={};(()=>{e.d(r,{Ay:()=>g,B:()=>h,CH:()=>f,Li:()=>A,S_:()=>v,U0:()=>o,UV:()=>s,Yx:()=>n.Y,bL:()=>l,dS:()=>a,hZ:()=>y,hb:()=>i,k4:()=>t,lX:()=>u,lr:()=>d,oS:()=>c});var n=e(735);function t(n=this){for(let t=n.length-1;t>0;--t){let e=Math.floor(Math.random()*(t+1));[n[t],n[e]]=[n[e],n[t]]}return n}async function s(n,t=this){return(await u(n,t)).every((n=>n))}async function a(n,t=this){const e=[];for(let r=0;r<t.length;++r)await n(t[r],r,t)&&e.push(t[r]);return e}async function i(n,t=this,e){for(let r=0;r<t.length;++r)if(await n(t[r],r,t))return e?r:t[r];return e?-1:void 0}function o(n,t){return i(n,t,!0)}async function c(n,t=this,e){for(let r=t.length-1;r>=0;--r)if(await n(t[r],r,t))return e?r:t[r];return e?-1:void 0}function f(n,t){return c(n,t,!0)}async function y(n,t=this){return u(n,t,!0)}async function u(n,t=this,e){const r=e?void 0:[];for(let e=0;e<t.length;++e){const s=await n(t[e],e,t);r?.push(s)}return r}async function h(n,t,e=this){let r=t,s=0;if(void 0===t){if(!e.length)throw new TypeError("Reduce of empty array with no initial value");r=e[0],s=1}for(let t=s;t<e.length;++t)r=await n(r,e[t],t,e);return r}async function l(n,t,e=this){let r=t,s=e.length-1;if(void 0===t){if(!e.length)throw new TypeError("Reduce of empty array with no initial value");r=e[s],--s}for(let t=s;t>=0;--t)r=await n(r,e[t],t,e);return r}function d(n,t){return o(n,t).then((n=>-1!==n))}function A(n,t=this){const e={};return t.forEach(((r,s)=>e[r]=n(r,s,t))),e}const p={shuffle:t,everyAsync:s,filterAsync:a,findAsync:i,findIndexAsync:o,findLastAsync:c,findLastIndexAsync:f,forEachAsync:y,mapAsync:u,reduceAsync:h,reduceRightAsync:l,someAsync:d,mapToObject:A},v=()=>Object.assign(Array.prototype,p);Object.assign(n.A,p,{extendArrayPrototype:v});const g=n.A})();var s=r.Ay,a=r.UV,i=r.S_,o=r.dS,c=r.hb,f=r.U0,y=r.oS,u=r.CH,h=r.hZ,l=r.lX,d=r.Li,A=r.B,p=r.bL,v=r.k4,g=r.lr,b=r.Yx;export{s as default,a as everyAsync,i as extendArrayPrototype,o as filterAsync,c as findAsync,f as findIndexAsync,y as findLastAsync,u as findLastIndexAsync,h as forEachAsync,l as mapAsync,d as mapToObject,A as reduceAsync,p as reduceRightAsync,v as shuffle,g as someAsync,b as use};